/**
 * Copyright 2019, Cobo
 * This resource is property of Cobo Srl. It is not allowed to take the resource to use or build
 * upon in personal or commercial projects such as websites, web apps and web templates
 * intended for sale. It is not allowed to take the resource "as-is" and sell it, redistribute,
 * re-publish it, or sell "pluginized" versions of it. Always consider the licenses of all included
 * libraries, scripts and images used.
 */

const WIDTH=128,BOUNDS=512,BOUNDS_HALF=.5*BOUNDS;let effectController={mouseSize:20,viscosity:.98};class App{constructor(){this.speedTime=1,this.time=0,this.clock=new THREE.Clock,this.mouse=new THREE.Vector2(0,0),this.raycaster=new THREE.Raycaster,this.init(),window.addEventListener("resize",this.onWindowResize.bind(this),!1),window.addEventListener("mousemove",this.onMouseMove.bind(this),!1),document.addEventListener("mousedown",this.onMouseDown.bind(this),!1),document.addEventListener("mouseup",this.onMouseUp.bind(this),!1)}init(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio=window.devicePixelRatio,document.querySelector("main").appendChild(this.renderer.domElement),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,0,7),this.lightTop=new THREE.DirectionalLight(15124983,.55),this.lightTop.position.set(0,500,300),this.scene.add(this.lightTop),this.lightBottom=new THREE.DirectionalLight(3598568,.2),this.lightBottom.position.set(0,-500,400),this.scene.add(this.lightBottom);let e=new THREE.AmbientLight(8228059);this.scene.add(e),this.addBlob(),this.renderer.setAnimationLoop(this.render.bind(this))}addBlob(){let e=new THREE.SphereGeometry(BOUNDS,WIDTH-1,WIDTH-1),t=THREE.ShaderLib.phong;t.uniforms.diffuse.value=[.8941176470588236,.9254901960784314,.9803921568627451],t.uniforms.shininess.value=200;let i=THREE.UniformsUtils.merge([t.uniforms,{uTime:{value:0},uFrequency:{value:.7},uAmplitude:{value:.5},uHeightMap:{value:null}}]),s=t.fragmentShader;s=document.querySelector("#fragmentShaderBeforeMain").textContent+s.replace("vec4 diffuseColor = vec4( diffuse, opacity );",document.querySelector("#fragmentShader").textContent);let r=new THREE.ShaderMaterial({uniforms:i,vertexShader:document.querySelector("#vertexShader").textContent,fragmentShader:s,lights:!0,defines:{WIDTH:WIDTH.toFixed(1),BOUNDS:BOUNDS.toFixed(1)}});this.blob=new THREE.Mesh(e,r),this.scene.add(this.blob),this.blob.rotation.y=THREE.Math.degToRad(-45);let a=new THREE.SphereBufferGeometry(1.2,16,16);this.shadowBlob=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:16777215,visible:!1})),this.scene.add(this.shadowBlob),this.gpuCompute=new THREE.GPUComputationRenderer(WIDTH,WIDTH,this.renderer);let o=this.gpuCompute.createTexture();this.fillTexture(o),this.heightmapVariable=this.gpuCompute.addVariable("heightmap",document.getElementById("heightmapFragmentShader").textContent,o),this.gpuCompute.setVariableDependencies(this.heightmapVariable,[this.heightmapVariable]),this.heightmapVariable.material.uniforms.mousePos={value:new THREE.Vector3(1e4,1e4)},this.heightmapVariable.material.uniforms.mouseSize={value:effectController.mouseSize},this.heightmapVariable.material.uniforms.viscosityConstant={value:effectController.viscosity},this.heightmapVariable.material.uniforms.heightCompensation={value:0},this.heightmapVariable.material.defines.BOUNDS=BOUNDS.toFixed(1);let n=this.gpuCompute.init();null!==n&&console.error(n),this.smoothShader=this.gpuCompute.createShaderMaterial(document.getElementById("smoothFragmentShader").textContent,{smoothTexture:{value:null}}),this.readWaterLevelShader=this.gpuCompute.createShaderMaterial(document.getElementById("readWaterLevelFragmentShader").textContent,{point1:{value:new THREE.Vector2},levelTexture:{value:null}}),this.readWaterLevelShader.defines.WIDTH=WIDTH.toFixed(1),this.readWaterLevelShader.defines.BOUNDS=BOUNDS.toFixed(1),this.readWaterLevelImage=new Uint8Array(16),this.readWaterLevelRenderTarget=new THREE.WebGLRenderTarget(4,1,{wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.UnsignedByteType,stencilBuffer:!1,depthBuffer:!1})}fillTexture(e){var t=10;function i(e,i){for(var s=t,r=.025,a=0,o=0;o<15;o++)a+=s*simplex.noise2D(e*r,i*r),s*=.53+.025*o,r*=1.25;return a}for(var s=e.image.data,r=0,a=0;a<WIDTH;a++)for(var o=0;o<WIDTH;o++){var n=128*o/WIDTH,h=128*a/WIDTH;s[r+0]=i(n,h),s[r+1]=s[r+0],s[r+2]=0,s[r+3]=1,r+=4}}render(){let e=this.clock.getDelta()*this.speedTime;this.time=this.time+e;for(let e=0;e<this.blob.geometry.vertices.length;e++){let t=this.blob.geometry.vertices[e];t.normalize().multiplyScalar(1+this.blob.material.uniforms.uAmplitude.value*simplex.noise4D(t.x*this.blob.material.uniforms.uFrequency.value,t.y*this.blob.material.uniforms.uFrequency.value,t.z*this.blob.material.uniforms.uFrequency.value,this.time).map(-1,1,0,1))}this.blob.geometry.computeVertexNormals(),this.blob.geometry.normalsNeedUpdate=!0,this.blob.geometry.verticesNeedUpdate=!0;let t=this.heightmapVariable.material.uniforms;if(!0===this.mouseMoved){this.raycaster.setFromCamera(this.mouse,this.camera);let e=this.raycaster.intersectObject(this.shadowBlob)[0];if(e){let i=e.uv;e.point;i.x=2*(i.x-.375)*256,i.y=2*(.5-i.y)*256,t.mousePos.value.set(i.x,i.y)}else t.mousePos.value.set(1e4,1e4);this.gpuCompute.compute(),this.blob.material.uniforms.uTime.value=this.time,this.blob.material.uniforms.uHeightMap.value=this.gpuCompute.getCurrentRenderTarget(this.heightmapVariable).texture}this.renderer.render(this.scene,this.camera)}valuesChanger(){this.heightmapVariable.material.uniforms.mouseSize.value=effectController.mouseSize,this.heightmapVariable.material.uniforms.viscosityConstant.value=effectController.viscosity}onMouseMove(e){this.firstMove||(this.firstMove=!0,this.heightmapVariable.material.uniforms.viscosityConstant={value:0},setTimeout(()=>{this.heightmapVariable.material.uniforms.viscosityConstant={value:effectController.viscosity}},100));let t=e.clientX/window.innerWidth*2-1,i=-e.clientY/window.innerHeight*2+1;TweenLite.to(this.lightBottom.position,.75,{x:1e3*t-600,y:1e3*i-100}),TweenLite.to(this.blob.rotation,.25,{y:THREE.Math.degToRad(25*t-45),x:THREE.Math.degToRad(25*-i)}),!0===this.mouseDown||(this.mouseMoved=!0,this.mouse.x=t,this.mouse.y=i)}onMouseDown(e){this.mouseDown=!0,TweenLite.to(this.blob.material.uniforms.uAmplitude,2,{value:.5,ease:Elastic.easeOut.config(1,.3)}),TweenLite.to(this.blob.material.uniforms.uFrequency,.5,{value:2}),TweenLite.to(this,.5,{speedTime:2})}onMouseUp(e){this.mouseDown=!1,TweenLite.to(this.blob.material.uniforms.uAmplitude,2,{value:.5,ease:Elastic.easeOut.config(1,.3)}),TweenLite.to(this.blob.material.uniforms.uFrequency,.5,{value:.7}),TweenLite.to(this,.5,{speedTime:1})}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}}Number.prototype.map=function(e,t,i,s){return(this-e)*(s-i)/(t-e)+i};const simplex=new SimplexNoise,app=new App;
