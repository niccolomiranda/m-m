const WIDTH=128,BOUNDS=512,BOUNDS_HALF=.5*BOUNDS,initialState={uFrequency:.7,uAmplitude:.7,speedTime:1},mouseDownState={uFrequency:2,uAmplitude:.8,speedTime:2};let effectController={mouseSize:20,viscosity:.98};class App{constructor(){this.speedTime=1,this.time=0,this.clock=new THREE.Clock,this.mouse=new THREE.Vector2(1e3,1e3),this.raycaster=new THREE.Raycaster,this.init(),window.addEventListener("resize",this.onWindowResize.bind(this),!1),window.addEventListener("mousemove",this.onMouseMove.bind(this),!1),document.addEventListener("mousedown",this.onMouseDown.bind(this),!1),document.addEventListener("mouseup",this.onMouseUp.bind(this),!1)}init(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0,powerPreference:"high-performance"}),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.setPixelRatio=window.devicePixelRatio,document.querySelector("main").appendChild(this.renderer.domElement),this.scene=new THREE.Scene,this.camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3),this.camera.position.set(0,0,7),this.lightTop=new THREE.DirectionalLight(11654375,.65),this.lightTop.position.set(0,500,300),this.scene.add(this.lightTop),this.lightBottom=new THREE.DirectionalLight(8631247,.13),this.lightBottom.position.set(0,-200,400),this.scene.add(this.lightBottom);let e=new THREE.AmbientLight(3167349);this.scene.add(e),this.addBlob(),this.renderer.setAnimationLoop(this.render.bind(this))}addBlob(){let e=new THREE.SphereGeometry(1,WIDTH-1,WIDTH-1),t=THREE.ShaderLib.phong;t.uniforms.diffuse.value=[.8941176470588236,.9254901960784314,.9803921568627451],t.uniforms.shininess.value=200;let i=THREE.UniformsUtils.merge([t.uniforms,{uTime:{value:0},uFrequency:{value:initialState.uFrequency},uAmplitude:{value:initialState.uAmplitude},uHeightMap:{value:null}}]),a=t.fragmentShader;a=a.replace("vec4 diffuseColor = vec4( diffuse, opacity );",document.getElementById("fragmentShader").textContent);let s=new THREE.ShaderMaterial({uniforms:i,vertexShader:document.getElementById("vertexShader").textContent,fragmentShader:a,lights:!0,defines:{WIDTH:WIDTH.toFixed(1),BOUNDS:BOUNDS.toFixed(1)}});this.blob=new THREE.Mesh(e,s),this.scene.add(this.blob),this.blob.rotation.y=THREE.Math.degToRad(-45);let o=new THREE.SphereBufferGeometry(1.4,16,16);this.shadowBlob=new THREE.Mesh(o,new THREE.MeshBasicMaterial({color:16777215,visible:!1})),this.scene.add(this.shadowBlob),this.shadowBlob.rotation.y=THREE.Math.degToRad(-45),this.gpuCompute=new THREE.GPUComputationRenderer(WIDTH,WIDTH,this.renderer);let n=this.gpuCompute.createTexture();this.fillTexture(n),this.heightmapVariable=this.gpuCompute.addVariable("heightmap",document.getElementById("heightmapFragmentShader").textContent,n),this.gpuCompute.setVariableDependencies(this.heightmapVariable,[this.heightmapVariable]),this.heightmapVariable.material.uniforms.mousePos={value:new THREE.Vector3(1e4,1e4)},this.heightmapVariable.material.uniforms.mouseSize={value:effectController.mouseSize},this.heightmapVariable.material.uniforms.viscosityConstant={value:effectController.viscosity},this.heightmapVariable.material.uniforms.heightCompensation={value:0},this.heightmapVariable.material.defines.BOUNDS=BOUNDS.toFixed(1);let r=this.gpuCompute.init();null!==r&&console.error(r),this.smoothShader=this.gpuCompute.createShaderMaterial(document.getElementById("smoothFragmentShader").textContent,{smoothTexture:{value:null}}),this.readWaterLevelShader=this.gpuCompute.createShaderMaterial(document.getElementById("readWaterLevelFragmentShader").textContent,{point1:{value:new THREE.Vector2},levelTexture:{value:null}}),this.readWaterLevelShader.defines.WIDTH=WIDTH.toFixed(1),this.readWaterLevelShader.defines.BOUNDS=BOUNDS.toFixed(1),this.readWaterLevelImage=new Uint8Array(16),this.readWaterLevelRenderTarget=new THREE.WebGLRenderTarget(4,1,{wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat,type:THREE.UnsignedByteType,stencilBuffer:!1,depthBuffer:!1})}fillTexture(e){var t=10;function i(e,i){for(var a=t,s=.025,o=0,n=0;n<15;n++)o+=a*simplex.noise2D(e*s,i*s),a*=.53+.025*n,s*=1.25;return o}for(var a=e.image.data,s=0,o=0;o<WIDTH;o++)for(var n=0;n<WIDTH;n++){var r=128*n/WIDTH,h=128*o/WIDTH;a[s+0]=i(r,h),a[s+1]=a[s+0],a[s+2]=0,a[s+3]=1,s+=4}}render(){let e=this.clock.getDelta()*this.speedTime;this.time=this.time+e;let t=this.heightmapVariable.material.uniforms;if(!0===this.mouseMoved){this.raycaster.setFromCamera(this.mouse,this.camera);let e=this.raycaster.intersectObject(this.shadowBlob)[0];if(e){let i=e.uv;e.point;i.x=2*(i.x-.5)*256,i.y=2*(.5-i.y)*256,t.mousePos.value.set(i.x,i.y)}else t.mousePos.value.set(1e4,1e4);this.gpuCompute.compute(),this.blob.material.uniforms.uHeightMap.value=this.gpuCompute.getCurrentRenderTarget(this.heightmapVariable).texture}this.blob.material.uniforms.uTime.value=this.time,this.renderer.render(this.scene,this.camera)}valuesChanger(){this.heightmapVariable.material.uniforms.mouseSize.value=effectController.mouseSize,this.heightmapVariable.material.uniforms.viscosityConstant.value=effectController.viscosity}onMouseMove(e){this.firstMove||(this.firstMove=!0,this.heightmapVariable.material.uniforms.viscosityConstant.value=0,setTimeout(()=>{this.heightmapVariable.material.uniforms.viscosityConstant.value=0},100),setTimeout(()=>{this.heightmapVariable.material.uniforms.viscosityConstant.value=effectController.viscosity},200));let t=e.clientX/window.innerWidth*2-1,i=-e.clientY/window.innerHeight*2+1;t=Math.max(Math.min(t,1),-1),i=Math.max(Math.min(i,1),-1),TweenLite.to(this.lightBottom.position,.75,{x:1e3*t-600,y:1e3*i-100}),TweenLite.to([this.blob.rotation,this.shadowBlob.rotation],.25,{y:THREE.Math.degToRad(25*t-45),x:THREE.Math.degToRad(25*-i)}),this.mouse.x=t,this.mouse.y=i,this.mouseMoved=!0}onMouseDown(e){this.mouseDown=!0,TweenLite.to(this.blob.material.uniforms.uAmplitude,2,{value:mouseDownState.uAmplitude,ease:Elastic.easeOut.config(1,.3)}),TweenLite.to(this.blob.material.uniforms.uFrequency,.5,{value:mouseDownState.uFrequency}),TweenLite.to(this,.5,{speedTime:mouseDownState.speedTime}),TweenLite.to(this.heightmapVariable.material.uniforms.viscosityConstant,.5,{value:0})}onMouseUp(e){this.mouseDown=!1,TweenLite.to(this.blob.material.uniforms.uAmplitude,2,{value:initialState.uAmplitude,ease:Elastic.easeOut.config(1,.3)}),TweenLite.to(this.blob.material.uniforms.uFrequency,.5,{value:initialState.uFrequency}),TweenLite.to(this,.5,{speedTime:initialState.speedTime}),TweenLite.to(this.heightmapVariable.material.uniforms.viscosityConstant,.5,{value:effectController.viscosity})}onWindowResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight)}}Number.prototype.map=function(e,t,i,a){return(this-e)*(a-i)/(t-e)+i};const simplex=new SimplexNoise,app=new App;
